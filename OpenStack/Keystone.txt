Keystone
    基本概念：
        user：即用户，指的是使用Openstack service的用户，可以是人、服务、系统；
            （也就是说，只要是访问Openstack service的对象，都可以称为user）

        Credentials：用于确认user身份的凭证；
            可以是：
                用户名和密码；
                用户名和API Key（密钥）；
                Keystone颁发的token令牌；
        
        oken：是一串数字字符串；
            当user访问资源时需要使用的凭证，在Keystone中引入的令牌机制，保护user对资源的访问，
            同时引入PKI、PKIZ、fernet、UUID等加密方式产生一串随机字符，对令牌加以保护；
            
            Token是有时效性的，在有效的时间内才可以访问资源；

        
        Endpoint：用来通过访问和定位某个Openstack service的地址，通常为一个URL；
            分为三类：
                admin url：管理员专用，默认port：35357；
                internal url：Openstack内部组件间互相通信专用，默认端口：5000；
                public url：（Openstack外界）其他用户访问专用，默认端口：5000；


    主要功能：OpenStack认证服务提供单一的集成点，用于管理身份验证、授权和服务目录；

    
    工作流程：（keystone与user认证的整个工作流程）
        1.user想创建一个实例，首先将自己的Credentials发给Keystone。认证成功后，Keystone会颁给
        user一个Token和一个访问服务的Endpoint
        
        2.user把token提交给Keystone，Keystone并返回一个Project
        
        3.user向Keystone发送带有特定Project的凭证，告诉Keystone，该user在哪个Project中，Keystone收请求后，
        会发送一个Project的Token到user。user带着这个Token和Endpoint找到相应的可访问服务；
        （注：第一个Token是用来验证user是否有权限与Keystone通信，第二个Token是用来验证user是否有权限访问Keystone的其它服务）
        
        4.服务向Keystone进行认证，user持有的该Token是否合法，是否允许访问该服务；
        
        5.在服务通过与Keystone认证该user的Token之后，服务执行user的请求，创建实例服务同时会将状态报告给user，报告用户实例创建成功；


    组件安装：
        创建Keystone数据库：
            在控制节点（controller）的MariaDB上创建Keystone数据库：
		        mysql -uroot -p123456	
                # -u root指定登录mariaDB的用户为root；
		        #-p123456 root用户登录maraiDB的密码为“123456”；
            创建Keystone数据库：CREATE DATABASE keystone；
            
            创建keystone数据库用户keystone，并开放本地/远程登录，登录密码为"KEYSTONE_DBPASS"；
                GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' \
                IDENTIFIED BY '123456';
                GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' \
                IDENTIFIED BY '123456';

        安装keystone组件：
            在控制节点（controller）上安装keystone组件：yum install openstack-keystone httpd mod_wsgi -y
	        
            配置keystone配置文件：/etc/keystone/keystone.conf
	        
            备份原始配置文件：cp /etc/keystone/keystone.conf /etc/keystone/keystone.conf.bak
            
            将原始配置文件去掉带”#“号行：
                cat /etc/keystone/keystone.conf.bak | grep -v ^# | uniq > /etc/keystone/keystone.conf
            
            编辑配置文件：vim /etc/keystone/keystone.conf 
            
            在 [database] 和[ token] 选项里分别添加以下参数：
                [database]
                connection=mysql+pymysql://keystone:123456@controller/keystone 
                [token]
                provider = fernet
            
            参数说明：
                [database]：数据库选项设置；
                “mysql+pymysql”：数据库连接方式；
                “keystone:KEYSTONE_DBPASS”： 登录用户名：用户密码；
                “@controller/keystone”：controller主机上的keystone数据库；
                [token]：鉴权认证设置；
                保存退出；

            填充keystone数据库：su -s /bin/sh -c "keystone-manage db_sync " keystone
                （无返回任何结果则表示填充正常）

            
            初始化Fernet key库：
                keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
                keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

            
            引导身份认证服务，配置keystone的相关认证信息：（未来openstack登录界面的管理员密码，在此设置）
                keystone-manage bootstrap --bootstrap-password 123456 \
                    --bootstrap-admin-url http://controller:5000/v3/ \
                    --bootstrap-internal-url http://controller:5000/v3/ \
                    --bootstrap-public-url http://controller:5000/v3/ \
                    --bootstrap-region-id RegionOne
            
            参数说明：
                --bootstrap-password： keystone管理员密码；
                --bootstrap-admin-url： 管理员认证URL；
                --bootstrap-internal-url： 内部认证URL；
                --bootstrap-public-url： 外部认证URL；
                --bootstrap-region-id： 指定区域名；


    配置Apache服务：
        在Apache配置文件中设置ServerName为本机主机名，的第96行加入”ServerName ctrl“
            vi /etc/httpd/conf/httpd.conf
                95 #ServerName www.example.com:80
                95 ServerName controller

            为wsgi-keystone.conf创建链接到Apache服务目录：
                ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/

        重启httpd服务，并加入开机自启：
            systemctl enable httpd.service
            systemctl start httpd.service


    部署验证：
        创建环境脚本：模拟一个帐号登录环境，如管理员登录，就需要创建一个环境脚本：
	        vi /root/admin-openrc
                export OS_USERNAME=admin
                export OS_PASSWORD=123456
                export OS_PROJECT_NAME=admin
                export OS_USER_DOMAIN_NAME=Default
                export OS_PROJECT_DOMAIN_NAME=Default
                export OS_AUTH_URL=http://controller:5000/v3
                export OS_IDENTITY_API_VERSION=3
	
            参数说明：
                export OS_USERNAME=admin：登录keystone的admin（管理员）帐号
                export OS_PASSWORD=ADMIN_PASS：keystone预设的密码
                export OS_PROJECT_NAME=admin：指定Openstack的项目类型
                export OS_USER_DOMAIN_NAME=Default：指定Openstack用户所属域
                export OS_PROJECT_DOMAIN_NAME=Default：指定Openstack项目所属域
                export OS_AUTH_URL=http://controller:35357/v3：指定认证链接
                export OS_IDENTITY_API_VERSION=3：指定认证版本
                
            执行脚本：. /root/admin-openrc
            查看当前环境：env | grep OS
                HOSTNAME=controller
                OS_USER_DOMAIN_NAME=Default
                OS_PROJECT_NAME=admin
                OS_IDENTITY_API_VERSION=3
                OS_PASSWORD=ADMIN_PASS
                OS_AUTH_URL=http://controller:5000/v3
                OS_USERNAME=admin
                OS_PROJECT_DOMAIN_NAME=Default

        
            验证：openstack token issue
                鉴权通过，创建一个domain（域），名为“example”，描述为“Test Example”：
                    openstack domain create --description "Test Example" example
            
            查看当前环境下的所有项目（project）：openstack project list
                一般情况下，除了管理员外，我们还需要一些非特权项目以及用户在默认域下（default domain）下，
                创建一个project（项目），名为“demo”，描述为“Demo Project”：
                    openstack project create --domain default --description "Demo Project" demo
            
            创建Openstack的“普通用户”角色，名为“user”：openstack role create user
            
            查看当前都有哪些角色：openstack role list
                将用户“demo”在“demo”项目中的角色，规划为“普通用户”的角色（指令不会返回结果）；
            
            验证登录：unset OS_AUTH_URL OS_PASSWORD     #取消环境变量的密码

            
            用户admin登录：
                openstack --os-auth-url http://controller:35357/v3 \
                    --os-project-domain-name Default --os-user-domain-name Default \
                    --os-project-name admin --os-username admin token issue
                
                password：ADMIN_PASS

            
            用户demo登录：
                openstack --os-auth-url http://controller:5000/v3 \
                    --os-project-domain-name Default --os-user-domain-name Default \
                    --os-project-name demo --os-username demo token issue
                
                password：123456


        练习：
            在默认域下，创建一个用户，名为“aa“：
                openstack user create --domain default --password-prompt aa

            将用户“aa”在“demo”项目中的角色，规划为“普通用户”的角色：
                openstack role add --project demo --user aa user
                
                查看结果：openstack role list --user aa --project demo
