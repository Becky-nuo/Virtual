Glance:
    含义：glance即image service，是为虚拟机的创建提供镜像的服务；

    Glance的组件功能：
        glance-api：接受镜像API调用以进行镜像发现，检索和存储；
        glance-registry：存储，处理和检索有关镜像的元数据，元数据包括例如大小和类型等项目；
        Database：存储镜像元数据，您可以根据自己的喜好选择数据库，大多数部署使用MySQL或SQLite；
        
        Storage repository for image files(镜像文件的存储库)：支持各种存储库类型，包括常规文件系统；
        (或安装在glance-api控制节点上的任何文件系统)，Object Storage，RADOS块设备，VMware数据存储和HTTP； 
        注意，某些存储库仅支持只读用法；
        
        Metadata definition service(元数据定义服务)：用于供应商，管理员，服务和用户的通用API来有意义地定义他们自己的定制元数据，
        此元数据可用于不同类型的资源，如镜像，开发，卷，定制和聚合，定义包括新属性的关键字，描述，约束和它可以关联的资源类型；


    镜像的状态：
        queued：没有上传 image 数据，只有db 中的元数据；
        
        saving：正在上传 image data，当注册一个镜像使用POST  /images并且当前携带了一个x-image-meta-location头，
        这个镜像将不会进入saving状态(镜像的数据已经是可以获得的，不能重传)；
        
        active：当镜像数据上传完毕，镜像就可以被使用了(可获得的)，此时处于active状态；
        deactivated：表示任何非管理员用户都无权访问镜像数据，禁止下载镜像，也禁止像镜像导出和镜像克隆之类的操作(请求镜像数据的操作)；
        killed：表示上传过程中发生错误，并且镜像是不可读的；
        
        deleted:glance已经保存了该镜像的数据，但是该镜像不再可用，处于该状态的镜像将在不久后被自动删除；
        pending_delete： 与deleted相似，glance还没有清除镜像数据，只是处于该状态的镜像不可恢复；


    版本:
        在Newton之前的版本中，glance支持两种REST API V1和V2，两者区别还是很明显的：
            V1只提供了基本的image和member操作功能：镜像创建、删除、下载、列表、详细信息查询、更新，以及镜像tenant成员的创建、删除和列表；
            
            V2除了支持V1的所有功能外，主要是增加了如下功能：镜像 location 的添加、删除和修改等操作，以及metadata  namespace ，image tag 的操作；
            
            V1 和V2对 image store 的支持是相同的：
                V1版本的实现，具有glance-api和glance-registry两个WSGI服务，二者都提供REST API，但强调的一点是：glance-registry提供的REST 
                API是给glance-api使用的；
                
                v2的实现就是将glance-registry集成到了glance-api内部，好处是减少了一个中间的处理环节，在Newton版本以及后来的openstack版本中，
                V1已经是过时的了，并且V1最终将被移除；


    工作流程：
        1）REST API：glance是一个client-server架构，提供一个REST API，而使用者通过REST API来执行关于镜像的各种操作，接受镜像API调用以进行镜像发现，检索和存储；
        
        2）Glance Domain Controller：glance内主要的中间件实现，就相当于一调度员，作用是将glance内部服务的操作分发到各层（Auth认证，Notifier，Policy策略，
        Quota，Location,DB数据库连接）具体任务由每个层实现；
        
        3）Auth：验证镜像自己或者它的属性是否可以被修改，只有管理员和该镜像的拥有者才可以执行该修改操作，否则报错；
        4）Notifier：关于所有镜像修改的通知，以及在使用过程中所有的异常和警告；
        5）Policy：定义操作镜像的访问规则rules，这些规则都定义在/etc/policy.json文件中，以及监控rules的执行；
        6）Quota：用户配额限制；
        
        7）Location：与Glance Store交互，如上传下载等，由于可以有多个存储后端，不同的镜像存放的位置都被该组件管理；
        a）当一个新的镜像位置被添加时，检测该URL是否正确；
        b）当一个镜像位置被改变时，负责从存储中删除该镜像，阻止镜像位置的重复；
        8）DB：实现了与数据库API的交互，将镜像转换为相应的格式以记录在数据库中，并且以数据库接收的信息转换为可操作的镜像对象；
        
        9）Glance Store：用来组织处理Glance和各种存储后端的交互，所有的镜像文件操作都是通过调用Glance Store库执行的，
        它负责与外部存储端和（或）本地文件系统的交互。Glance Store提供了一个统一的接口来访问后端的存储；

    
    
    组件安装：
        创建Glance数据库：
	        在控制节点（controller）的MariaDB上创建Keystone数据库：
		        mysql -u root -p123456	
                    # -u root指定登录mariaDB的用户为root
		            #-p123456 root用户登录maraiDB的密码为“123456”
            
            创建Keystone数据库：CREATE DATABASE glance；

            创建glance数据库用户glance，并开放本地/远程登录，登录密码为“GLANCE_DBPASS”
                GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' \
                IDENTIFIED BY 'glance_123456'；
                GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' \
                IDENTIFIED BY 'glance_123456'；

        
        创建glance相关信息：
            在控制节点（controller）上创建glance用户，名为glance：
                先执行环境变量： . /root/admin-openrc；
                再openstack默认域中创建glance用户：（执行后需要设置密码:123456，并确认密码）：
                    openstack user create --domain default --password-prompt glance

            将glance用户在service项目（project）中赋予管理员角色admin：
                openstack role add --project service --user glance admin（执行后无返回结果即正常）；


            创建一个类型为image（镜像）的服务（service）实体，描述为“OpenStack Image”：
                openstack service create --name glance --description "OpenStack Image" image；

            
            为image服务实体在RegionOne区域中创建三种供访问的Endpoint API：
                openstack endpoint create --region RegionOne image public http://controller:9292
                openstack endpoint create --region RegionOne image internal http://controller:9292
                openstack endpoint create --region RegionOne image admin http://controller:9292

        
        
        安装并配置glance组件：
            yum install openstack-glance -y
            
            配置glance-api配置文件：/etc/glance/glance-api.conf
	            备份原始配置文件：cp /etc/glance/glance-api.conf /etc/glance/glance-api.conf.bak
                将原始配置文件去掉带”#“号行：cat /etc/glance/glance-api.conf.bak | grep -v ^# | uniq > /etc/glance/glance-api.conf
                编辑配置文件：vim /etc/glance/glance-api.conf 
    
                在以下选项里分别添加以下参数：
                    [database]										#数据库设置
                    connection = mysql+pymysql://glance:GLANCE_DBPASS@controller/glance 
                    
                    [keystone_authtoken]								#keystone鉴权设置
                    auth_uri = http://controller:5000						#鉴权uri
                    auth_url = http://controller:5000						#鉴权url
                    memcached_servers = controller:11211				#memcached服务链接
                    auth_type = password								#认证方式
                    project_domain_name = Default					#指定项目域
                    user_domain_name = Default						#指定用户域
                    project_name = service							#指定项目
                    username = glance								#指定服务用户名
                    password = 123456								#服务用户名密码
                    
                    [paste_deploy]									#认证模式
                    flavor = keystone
                    
                    [glance_store]									#glance设置
                    stores = file,http									#存储方式
                    default_store = file								#默认存储类型
                    filesystem_store_datadir = /var/lib/glance/images/		#默认存储路径


            配置glance-registry配置文件：/etc/glance/glance-registry.conf
	            备份原始配置文件：cp /etc/glance/glance-registry.conf /etc/glance/glance-registry.conf.bak
                将原始配置文件去掉带”#“号行：cat /etc/glance/glance-registry.conf.bak | grep -v ^# | uniq > /etc/glance/glance-registry.conf
                
                编辑配置文件：vim /etc/glance/glance-registry.conf： 
                        [database]
                        connection = mysql+pymysql://glance:GLANCE_DBPASS@controller/glance
                        
                        [keystone_authtoken]
                        auth_uri = http://controller:5000
                        auth_url = http://controller:5000
                        memcached_servers = controller:11211
                        auth_type = password
                        project_domain_name = Default
                        user_domain_name = Default
                        project_name = service
                        username = glance
                        password = 123456
                        
                        [paste_deploy]
                        flavor = keystone

                
                填充glance数据库：su -s /bin/sh -c "glance-manage db_sync" glance

                启动服务并加入开机自启：
                    systemctl enable openstack-glance-api.service openstack-glance-registry.service
                    systemctl start openstack-glance-api.service openstack-glance-registry.service