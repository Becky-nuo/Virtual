Openstack 调用 keystone 接口获取 token ：
    实验目的：
        了解OpenStack Keystone的接口和功能；
        准备与部署开发环境；
        掌握获取Token，查看Service和Endpoint的功能；

    实验内容：
        调用keystone接口获取token；
        使用token查询service；
        使用token查询endpoint；
    
    实验要求：通过postman工具调用keystone接口获取token；


    实验步骤：
        流程：开始 --> 获取token --> 查看service --> 查看endpoint --> 结束；
            调用Keystone接口，获取token的值；
            使用获取到的token信息鉴权，查看当前授权的调用者所提供的服务；
            调用查看endpoint接口，查看当前所有的端点详细信息；

        获取Token：
            实验环境说明：
                horizon地址：192.168.98.4
                域：default
                帐户：admin
                密码：admin
                
                各api认证/请求端口：
                    keystone：35357
                    neutron：9696
                    cinder：8776
                    nova：8774

            打开Postman工具，设置请求方法为POST；
        
            设置请求URL为：http://192.168.98.4:35357/identity/v3/auth/tokens
                其中，identity.az1.dc1.domainname.com表示本机映射的域名；35357为keystone认证端口号；
                identity表示是Keystone服务；
                /v3/auth/tokens为获取Token的REST接口URI；
        
            设置请求消息Header： key值为“Content-Type”，value值为“application/json”
        
            设置请求消息Body
                单击“Body”，选中“raw”选项，发送的实体MIME类型选择JSON格式，输入获取Token的请求消息体；
                代码如下：（注意根据实际环境修改单引号里的内容）
                    { 
                        "auth":{ 
                            "identity":{ 
                                "methods":[ 
                                    "password" 
                                ], 
                                "password":{ 
                                    "user":{ 
                                        "name":'admin', 			（horizon的登录帐号）
                                        "password":'admin', 		（horizon的登录密码）
                                        "domain":{ 
                                            "name":'Default'		（所登录域）
                                        } 
                                    } 
                                } 
                            }, 
                            "scope":{ 
                                "project":{ 
                                    "name":'admin', 				（project名）
                                    "domain":{ 
                                        "name":'Default'			（project所在域）
                                    } 
                                } 
                            } 
                        } 
                    }

                代码说明：
                    "auth": 申请token 的方式，这里为 password ；
                    "password"：用户信息，包括用户名、密码、用户所属 domain；
                    
                    "scope"：token 作用域，可选，可以是project或者domain。用户必须跟这个scope具有角色绑定关系，
                    没有scope的token中没有角色信息，大部分接口都无法访问；

        
        查询Service：
            打开postman工具，设置请求方法为GET
	
            设置请求URL为：http://192.168.98.4:35357/v3/services
                其中，identity.az1.dc1.domainname.com表示本机映射的域名；35357为keystone的认证端口号；
                /v3/services为查看服务的REST接口URI；

            
            设置请求消息头：
                单击“Headers”，设置“Content-Type”和“X-Auth-Token”的值）；

            
            相关信息：
                名称：name	
                类型：string	
                描述：服务的名称。
                
                名称：links
                类型：object	
                描述：服务资源的链接。
                
                名称：enabled	
                类型：boolean	
                描述：判定服务和其访问地址是否显示在服务catalog中。
                    false：不会显示在catalog中；
                    true：会显示在catalog中；

                名称：services	
                类型：array	
                描述：所有服务的列表；
                
                名称：type	
                类型：string	
                描述：服务的类型，描述了由哪个服务来实现API的调用，值可以为“compute”、“identity”和“volumn”等；

                名称：id	
                类型：string	
                描述：服务ID，即endpoint所绑定的服务id；
                
                名称：description	
                类型：string	
                描述：服务的描述信息；


        查询endpoint：
            打开postman工具，设置请求方法为GET；
	        
            设置请求URL为：http://192.168.98.4:35357/v3/endpoints
                其中，identity.az1.dc1.domainname.com表示本机映射的域名；
                35357为keystone的认证端口号； 
                /v3/services为查看服务的REST接口URI；

            设置请求消息头：单击“Headers”，设置“Content-Type”和“X-Auth-Token”的值）；
                单击“Send”，发送成功（即返回码为200）后，得到所有Endpoint的列表，在返回结果中，
                通过搜索Keystone服务的id“3ac0c4cd195142299ee2f1cf6af3e4e8”，可以看到该服务对应有三种类型的访问地址；


            相关信息：
                名称：region_id	
                类型：string	
                描述：包括服务访问地址的区域ID，从v3.2版本开始才有该字段；

                名称：links	
                类型：object	
                描述：Endpoints资源的链接；

                名称：url	
                类型：string	
                描述：Endpoint的地址；

                名称：region	
                类型：string	
                描述：服务端点的地理位置。

                名称：enabled	
                类型：boolean	
                描述：判定endpoint是否显示在服务catalog中；
                    false：不会显示在catalog中；
                    true：会显示在catalog中；

                名称：interface	
                类型：string	
                描述：指定endpoint的类型；
                    public：终端用户可全局访问该地址；
                    internal：终端用户只能在局域网中访问；
                    admin：由管理员用户在意安全网络中访问；

                名称：endpoints	
                类型：array	
                描述：所有服务端点的列表；

                名称：service_id	
                类型：string	
                描述：服务ID，即endpoint所绑定的服务id；

                名称：id	
                类型：string	
                描述：端点的ID；


    Postman：（Openstack 接口调用工具）
        含义：Postman是一种网页调试与发送网页http请求的chrome插件，可以用来模拟get或者post或者其他方式的请求来调试；
        功能：postman界面分为两部分：左边的sidebar 右边的request builder：快速创建几乎所有的请求；

        HTTP请求的4部分:URL，请求的method，headers，body；

        URL设置：

        Method：Get 与 Post
            Get：get是从服务器上获取数据，是把参数数据队列加到提交表单的ACTION属性所指的URL中，值和表单内各个字段一一对应，
                在URL中可以看到Get的参数：Headers- Conten-Type；
                
                Http Header里的Content-Type一般有这三种：
                    application/x-www-form-urlencoded：数据被编码为名称/值对。这是标准的编码格式；
                    multipart/form-data： 数据被编码为一条消息，页上的每个控件对应消息中的一个部分；
                    text/plain：数据以纯文本形式(text/json/xml/html)进行编码，其中不含任何控件或格式字符，postman软件里标的是RAW；


            Post：
                post是向服务器传送数据，是通过HTTP post机制，将表单内各个字段与其内容放置在HTML HEADER内一起传送到ACTION
                属性所指的URL地址；（用户看不到这个过程）

                form-data：是网页表单用来传输数据的默认格式。可以模拟填写表单，并且提交表单\；
                
                urlencoded：上传文件通过这个编码模式，该模式和表单模式会容易混淆，urlencoded中的key-value会写入URL，
                form-data模式的key-value不明显写入URL，而是直接提交；
                
                raw：raw request可以包含任何东西。所有填写的text都会随着请求发送；
                
                binary：image, audio or video files.text files 。 也不能保存历史，每次选择文件，提交；

            其他设置：
                为了后续实验方便，关闭Postman的SSL认证：单击“File > Settings”，把“SSL certificate verification”设置为OFF状态；

